version: '3.9'

services:
#  bot:
#    container_name: ${PROJECT_NAME}-bot
#    build:
#      dockerfile: Dockerfile.bot
#      context: .
#    working_dir: "/usr/src/app/${BOT_NAME:-tg_bot}"
#    stop_signal: SIGINT
#    volumes:
#      - .:/usr/src/app/${BOT_NAME:-tg_bot}
##    command: python3 src/bot.py
#    restart: always
#    depends_on:
#      - web
#      - db
#    env_file: .env

  web:
    container_name: ${BOT_CONTAINER_NAME}-web
    build:
      context: .
    working_dir: "/usr/src/app/"
    volumes:
      - .:/usr/src/app/
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file: .env

  db:
    image: postgres:15.0-alpine
    volumes:
      - ./postgres_db/postgres/postgresql-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: unless-stopped
    container_name: ${BOT_NAME}-db
    env_file: .env
    ports:
      - 5432:5432
    command:
      - "postgres"
      - "-c"
      - "log_destination=stderr"
      - "-c"
      - "logging_collector=on"
      - "-c"
      - "log_directory=/var/lib/postgresql/data/pg_log"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
volumes:
  postgres_data: